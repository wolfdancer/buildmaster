module BuildMaster
  class PackageAnt
    attr_accessor :manifest
    
    def initialize(dir, name)
      @jar = dir.file("#{name}.jar")
      @zip = dir.file("#{name}-src.zip")
      @classes = []
      @sources = []
    end

    def target
      'package-ant'
    end

    def add(class_root, source_root = nil)
      @classes.push class_root
      @sources.push source_root unless source_root.nil?
    end

    def build_file
      file = @jar.parent.file('package-ant.xml')
      file.write do |f|
        f.puts <<CONTENT
<!-- ANT file generated by buildmaste PackageAnt -->
<project name="#{target}" default="#{target}">
  <target name="#{target}">
    <jar destfile="#{@jar}"#{manifest_attribute}>
#{fileset_elements(@classes)}    </jar>
    <zip destfile="#{@zip}">
#{fileset_elements(@sources)}    </zip>
  </target>
</project>
CONTENT
      end
      file
    end

    def run
      @jar.parent.mkdirs
      AntDriver.from_file(build_file).target(target)
    end

    private
    def fileset_elements(dirs)
      buffer = StringIO.new
      dirs.each {|dir| buffer << "      <fileset dir=\"#{dir}\"/>\n"}
      buffer.string
    end

    def manifest_attribute
      if (manifest.nil?)
        ''
      else
        " manifest=\"#{manifest}\""
      end
    end

  end
end